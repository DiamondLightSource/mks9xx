
#
# mks9xx.template
#
# % macro, P, PV Prefix
# % macro, PORT, Asyn port name
#
# % gui, $(PORT), edm, mks9xxGauge.edl, P=$(P) 
# %archiver 10 Monitor
record(mbbi, "$(P):CONNECTION_RBV")
    {
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0,5)CONNECTION")
    field(ZRVL, "0")
    field(ZRST, "Disconnected")
    field(ONVL, "1")
    field(ONST, "Connected")
    field(UNSV, "MAJOR")
    field(ZRSV, "MAJOR")
    field(ONSV, "NO_ALARM")
    }
# %archiver 10 Monitor
record(mbbi, "$(P):ANALOGUEOUTPUTFORMAT1_RBV")
    {
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0,5)ANALOGUEOUTPUTFORMAT1")
    field(ZRVL, "0")
    field(ZRST, "Micro Pirani")
    field(ONVL, "1")
    field(ONST, "Piezo")
    field(TWVL, "2")
    field(TWST, "Combination")
    }
# %archiver 10 Monitor
record(mbbi, "$(P):ANALOGUEOUTPUTFORMAT2_RBV")
    {
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0,5)ANALOGUEOUTPUTFORMAT2")
    field(ZRVL, "0")
    field(ZRST, "Micro Pirani")
    field(ONVL, "1")
    field(ONST, "Piezo")
    field(TWVL, "2")
    field(TWST, "Combination")
    }
# %archiver 10 Monitor
# %autosave 2 VAL
record(mbbo, "$(P):ANALOGUEOUTPUTFORMAT1")
    {
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0,5)ANALOGUEOUTPUTFORMAT1")
    field(ZRVL, "0")
    field(ZRST, "Micro Pirani")
    field(ONVL, "1")
    field(ONST, "Piezo")
    field(TWVL, "2")
    field(TWST, "Combination")
    }
# %archiver 10 Monitor
# %autosave 2 VAL
record(mbbo, "$(P):ANALOGUEOUTPUTFORMAT2")
    {
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0,5)ANALOGUEOUTPUTFORMAT2")
    field(ZRVL, "0")
    field(ZRST, "Micro Pirani")
    field(ONVL, "1")
    field(ONST, "Piezo")
    field(TWVL, "2")
    field(TWST, "Combination")
    }
# %archiver 10 Monitor
record(mbbi, "$(P):UNITS_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,5)UNITS")
  field(ZRVL, "0")
  field(ZRST, "Torr")
  field(ONVL, "1")
  field(ONST, "mBar")
  field(TWVL, "2")
  field(TWST, "Pascal")
}
# %archiver 10 Monitor
# %autosave 2 VAL
record(mbbo, "$(P):UNITS")
{
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0,5)UNITS")
  field(ZRVL, "0")
  field(ZRST, "Torr")
  field(ONVL, "1")
  field(ONST, "mBar")
  field(TWVL, "2")
  field(TWST, "Pascal")
}
# %archiver 10 Monitor
record(stringin, "$(P):USERTAG_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),0,5)USERTAG")
}
# %archiver 10 Monitor
# %autosave 2 VAL
record(stringout, "$(P):USERTAG")
    {
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT),0,5)USERTAG")
    field(VAL, "$(P)")
    field(PINI, "YES")
    }
record(stringin, "$(P):FIRMWAREVERSION_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),0,5)FIRMWAREVERSION")
}
record(stringin, "$(P):HARDWAREVERSION_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),0,5)HARDWAREVERSION")
}
record(stringin, "$(P):MANUFACTURER_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),0,5)MANUFACTURER")
}
record(stringin, "$(P):MODEL_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),0,5)MODEL")
}
# %archiver 10 Monitor
record(ai, "$(P):PRESSURE1_RBV")
{
  alias("$(P):PRESSUREMP_RBV")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,5)PRESSURE1")
  field(PREC, "1")
}
# %archiver 10 Monitor
record(ai, "$(P):PRESSURE2_RBV")
{
  alias("$(P):PRESSUREPZ_RBV")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,5)PRESSURE2")
  field(PREC, "1")
}
# %archiver 10 Monitor
record(ai, "$(P):PRESSURE3_RBV")
{
  alias("$(P):PRESSURECOMB_RBV")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,5)PRESSURE3")
  field(PREC, "1")
}
# %archiver 10 Monitor
record(ai, "$(P):PRESSURE4_RBV")
{
  alias("$(P):PRESSURECC_RBV")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,5)PRESSURE4")
  field(PREC, "1")
}
# %archiver 10 Monitor
record(ai, "$(P):PRESSURE5_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,5)PRESSURE5")
  field(PREC, "1")
}
record(stringin, "$(P):SERIALNUMBER_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),0,5)SERIALNUMBER")
}
record(ai, "$(P):TIMEON_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,5)TIMEON")
  field(PREC, "0")
  field(EGU,  "hrs")
}
# %archiver 10 Monitor
record(ai, "$(P):TRANSDUCERTEMPERATURE_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,5)TRANSDUCERTEMPERATURE")
  field(EGU,  "C")
}
# %archiver 10 Monitor
record(ai, "$(P):SETPOINT1_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,5)SETPOINT1")
  field(PREC, "1")
}
# %archiver 10 Monitor
record(ai, "$(P):SETPOINT2_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,5)SETPOINT2")
  field(PREC, "1")
}
# %archiver 10 Monitor
record(ai, "$(P):SETPOINT3_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,5)SETPOINT3")
  field(PREC, "1")
}
# %archiver 10 Monitor
# %autosave 2 VAL
record(ao, "$(P):SETPOINT1")
{
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),0,5)SETPOINT1")
  field(PREC, "1")
}
# %archiver 10 Monitor
# %autosave 2 VAL
record(ao, "$(P):SETPOINT2")
{
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),0,5)SETPOINT2")
  field(PREC, "1")
}
# %archiver 10 Monitor
# %autosave 2 VAL
record(ao, "$(P):SETPOINT3")
{
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),0,5)SETPOINT3")
  field(PREC, "1")
}
# %archiver 10 Monitor
record(ai, "$(P):SETPOINTHYSTERESIS1_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,5)SETPOINTHYSTERESIS1")
  field(PREC, "1")
}
# %archiver 10 Monitor
record(ai, "$(P):SETPOINTHYSTERESIS2_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,5)SETPOINTHYSTERESIS2")
  field(PREC, "1")
}
# %archiver 10 Monitor
record(ai, "$(P):SETPOINTHYSTERESIS3_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,5)SETPOINTHYSTERESIS3")
  field(PREC, "1")
}
# %archiver 10 Monitor
# %autosave 2 VAL
record(ao, "$(P):SETPOINTHYSTERESIS1")
{
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),0,5)SETPOINTHYSTERESIS1")
  field(PREC, "1")
}
# %archiver 10 Monitor
# %autosave 2 VAL
record(ao, "$(P):SETPOINTHYSTERESIS2")
{
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),0,5)SETPOINTHYSTERESIS2")
  field(PREC, "1")
}
# %archiver 10 Monitor
# %autosave 2 VAL
record(ao, "$(P):SETPOINTHYSTERESIS3")
{
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),0,5)SETPOINTHYSTERESIS3")
  field(PREC, "1")
}
# %archiver 10 Monitor
record(mbbi, "$(P):SETPOINTDIRECTION1_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,5)SETPOINTDIRECTION1")
  field(ZRVL, "0")
  field(ZRST, "Below")
  field(ONVL, "1")
  field(ONST, "Above")
}
# %archiver 10 Monitor
record(mbbi, "$(P):SETPOINTDIRECTION2_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,5)SETPOINTDIRECTION2")
  field(ZRVL, "0")
  field(ZRST, "Below")
  field(ONVL, "1")
  field(ONST, "Above")
}
# %archiver 10 Monitor
record(mbbi, "$(P):SETPOINTDIRECTION3_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,5)SETPOINTDIRECTION3")
  field(ZRVL, "0")
  field(ZRST, "Below")
  field(ONVL, "1")
  field(ONST, "Above")
}
# %archiver 10 Monitor
# %autosave 2 VAL
record(mbbo, "$(P):SETPOINTDIRECTION1")
{
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0,5)SETPOINTDIRECTION1")
  field(ZRVL, "0")
  field(ZRST, "Below")
  field(ONVL, "1")
  field(ONST, "Above")
}
record(mbbo, "$(P):SETPOINTDIRECTION2")
{
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0,5)SETPOINTDIRECTION2")
  field(ZRVL, "0")
  field(ZRST, "Below")
  field(ONVL, "1")
  field(ONST, "Above")
}
record(mbbo, "$(P):SETPOINTDIRECTION3")
{
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0,5)SETPOINTDIRECTION3")
  field(ZRVL, "0")
  field(ZRST, "Below")
  field(ONVL, "1")
  field(ONST, "Above")
}
# %archiver 10 Monitor
record(mbbi, "$(P):SETPOINTENABLE1_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,5)SETPOINTENABLE1")
  field(ZRVL, "0")
  field(ZRST, "Disable")
  field(ONVL, "1")
  field(ONST, "Enable")
}
# %archiver 10 Monitor
record(mbbi, "$(P):SETPOINTENABLE2_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,5)SETPOINTENABLE2")
  field(ZRVL, "0")
  field(ZRST, "Disable")
  field(ONVL, "1")
  field(ONST, "Enable")
}
# %archiver 10 Monitor
record(mbbi, "$(P):SETPOINTENABLE3_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,5)SETPOINTENABLE3")
  field(ZRVL, "0")
  field(ZRST, "Disable")
  field(ONVL, "1")
  field(ONST, "Enable")
}
# %archiver 10 Monitor
# %autosave 2 VAL
record(mbbo, "$(P):SETPOINTENABLE1")
{
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0,5)SETPOINTENABLE1")
  field(ZRVL, "0")
  field(ZRST, "Disable")
  field(ONVL, "1")
  field(ONST, "Enable")
}
# %archiver 10 Monitor
# %autosave 2 VAL
record(mbbo, "$(P):SETPOINTENABLE2")
{
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0,5)SETPOINTENABLE2")
  field(ZRVL, "0")
  field(ZRST, "Disable")
  field(ONVL, "1")
  field(ONST, "Enable")
}
# %archiver 10 Monitor
# %autosave 2 VAL
record(mbbo, "$(P):SETPOINTENABLE3")
{
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0,5)SETPOINTENABLE3")
  field(ZRVL, "0")
  field(ZRST, "Disable")
  field(ONVL, "1")
  field(ONST, "Enable")
}
# %archiver 10 Monitor
record(mbbi, "$(P):SETPOINTSTATE1_RBV")
    {
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0,5)SETPOINTSTATE1")
    field(ZRVL, "0")
    field(ZRST, "Clear")
    field(ONVL, "1")
    field(ONST, "Set")
    field(UNSV, "MAJOR")
    field(ZRSV, "NO_ALARM")
    field(ONSV, "MAJOR")
    }

# %archiver 10 Monitor
record(mbbi, "$(P):SETPOINTSTATE2_RBV")
    {
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0,5)SETPOINTSTATE2")
    field(ZRVL, "0")
    field(ZRST, "Clear")
    field(ONVL, "1")
    field(ONST, "Set")
    field(UNSV, "MAJOR")
    field(ZRSV, "NO_ALARM")
    field(ONSV, "MAJOR")
    }

# %archiver 10 Monitor
record(mbbi, "$(P):SETPOINTSTATE3_RBV")
    {
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0,5)SETPOINTSTATE3")
    field(ZRVL, "0")
    field(ZRST, "Clear")
    field(ONVL, "1")
    field(ONST, "Set")
    field(UNSV, "MAJOR")
    field(ZRSV, "NO_ALARM")
    field(ONSV, "MAJOR")
    }

record(mbbi, "$(P):TRANSDUCERTYPE_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,5)TRANSDUCERTYPE")
  field(ZRVL, "0")
  field(ZRST, "Load Lock")
  field(ONVL, "1")
  field(ONST, "Dual Trans")
  field(TWVL, "2")
  field(TWST, "Micro Pirani")
  field(THVL, "3")
  field(THST, "Uni Mag")
  field(FRVL, "4")
  field(FRST, "Dual Mag")
  field(FVVL, "5")
  field(FVST, "Quad Mag")
}

record(mbbi, "$(P):TRANSDUCERSTATUS_RBV")
    {
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0,5)TRANSDUCERSTATUS")
    field(ZRVL, "0")
    field(ZRST, "OK")
    field(ONVL, "1")
    field(ONST, "MicroPirani Fail")
    field(TWVL, "2")
    field(TWST, "Piezo Fail")
    field(UNSV, "MAJOR")
    field(ZRSV, "NO_ALARM")
    field(ONSV, "MAJOR")
    field(TWSV, "MAJOR")
    }

# %archiver 10 Monitor
record(mbbo, "$(P):CCCON")
    {
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0,5)CCCON")
    field(ZRVL, "0")
    field(ZRST, "Off")
    field(ONVL, "1")
    field(ONST, "On")
    }

# %archiver 10 Monitor
record(mbbi, "$(P):CCCON_RBV")
    {
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0,5)CCCON")
    field(ZRVL, "0")
    field(ZRST, "Off")
    field(ONVL, "1")
    field(ONST, "On")
    }

# %archiver 10 Monitor
record(mbbo, "$(P):GASTYPE")
    {
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0,5)GASTYPE")
    field(ZRVL, "0")
    field(ZRST, "Nitrogen")
    field(ONVL, "1")
    field(ONST, "Air")
    field(TWVL, "2")
    field(TWST, "Argon")
    field(THVL, "3")
    field(THST, "Helium")
    field(FRVL, "4")
    field(FRST, "Hydrogen")
    field(FVVL, "5")
    field(FVST, "H2O")
    field(SXVL, "6")
    field(SXST, "Neon")
    field(SVVL, "7")
    field(SVST, "CO2")
    field(EIVL, "8")
    field(EIST, "Xenon")
    }

# %archiver 10 Monitor
record(mbbi, "$(P):GASTYPE_RBV")
    {
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0,5)GASTYPE")
    field(ZRVL, "0")
    field(ZRST, "Nitrogen")
    field(ONVL, "1")
    field(ONST, "Air")
    field(TWVL, "2")
    field(TWST, "Argon")
    field(THVL, "3")
    field(THST, "Helium")
    field(FRVL, "4")
    field(FRST, "Hydrogen")
    field(FVVL, "5")
    field(FVST, "H2O")
    field(SXVL, "6")
    field(SXST, "Neon")
    field(SVVL, "7")
    field(SVST, "CO2")
    field(EIVL, "8")
    field(EIST, "Xenon")
    }
   
   # %archiver 10 Monitor
record(mbbo, "$(P):LOCK")
    {
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0,5)LOCK")
    field(ZRVL, "0")
    field(ZRST, "Unlock")
    field(ONVL, "1")
    field(ONST, "Lock")
    }

# %archiver 10 Monitor
record(mbbi, "$(P):LOCK_RBV")
    {
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0,5)LOCK")
    field(ZRVL, "0")
    field(ZRST, "Unlock")
    field(ONVL, "1")
    field(ONST, "Lock")
    }

# %archiver 10 Monitor
record(ai, "$(P):CCDOSE_RBV")
    {
    field(SCAN, "I/O Intr")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),0,5)CCDOSE")
    field(PREC, "2")
    }
   
################################################################################
# Status
#
#% archiver 10 Monitor
#
record(mbbi, "$(P):STA") 
    {
    field(DTYP, "Soft Channel")
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),0,5)STA")
    field(SCAN, "I/O Intr")
    field(DESC, "Status")
    field(ZRST, "OK")
    field(ONST, "Not Connected")
    field(TWST, "Transducer fault")
    field(UNSV, "MAJOR")
    field(ZRSV, "NO_ALARM")
    field(ONSV, "MAJOR")
    field(TWSV, "MAJOR")
    }
   
